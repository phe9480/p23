% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simu.power.p23.new.R
\name{simu.power.p23.new}
\alias{simu.power.p23.new}
\title{Phase 2/3 Inferential Seamless Design Power calculation by simulations}
\usage{
simu.power.p23.new(
  nSim = 10,
  n1 = rep(50, 4),
  n2 = rep(200, 2),
  m = c(9, 9, 9, 9),
  orr = c(0.25, 0.3, 0.4, 0.2),
  rho = 0.7,
  dose_selection_endpoint = "ORR",
  Lambda1 = function(t) {
     (t/12) * as.numeric(t <= 12) + as.numeric(t > 12)
 },
  A1 = 12,
  Lambda2 = function(t) {
     (t/12) * as.numeric(t <= 12) + as.numeric(t > 12)
 },
  A2 = 12,
  enrollment.hold = 4,
  DCO1 = 16,
  targetEvents2 = c(300, 380),
  e1 = NULL,
  alpha = 0.025,
  sf = gsDesign::sfLDOF,
  multiplicity.method = "simes",
  method = "Independent Incremental"
)
}
\arguments{
\item{nSim}{Number of simulated trials}

\item{n1}{Stage 1 sample size of each dose and control arm. length(n1) must be number of arms. The last component is control.}

\item{n2}{Stage 2 Sample size of the selected dose and control arm. length(n2) must be 2. The second component is control.}

\item{m}{Median survival time for each arm (dose 1, dose 2, ..., control). length(m) must be equal to length(n1). The last component in m is control.}

\item{orr}{ORR for each arm. length(orr) = length(m).}

\item{rho}{Correlation between ORR and time to event endpoint}

\item{dose_selection_endpoint}{Dose selection end point: "ORR" or "not ORR"}

\item{Lambda1}{Enrollment distribution function (CDF) for stage 1.}

\item{A1}{Enrollment period for Stage 1}

\item{Lambda2}{Enrollment distribution function (CDF) for stage 2.}

\item{A2}{Enrollment period for Stage 2}

\item{enrollment.hold}{Holding period in months after DCO1 of Stage 1 prior to enrollment of Stage 2 patients. 0 means seamless enrollment.}

\item{DCO1}{Data cutoff date for Stage 1}

\item{targetEvents2}{Planned target number of events for Stage 2. Either targetEvents2 must be provided.}

\item{alpha}{Type I error (one-sided) for testing the selected dose, usually 0.025.}

\item{sf}{Spending functions. acceptable options include all spending functions in gsDesign R package, for example, "gsDesign::sfLDOF"}

\item{multiplicity.method}{"simes" or "Dunnett"}

\item{method}{Options include "Independent Incremental": z1 at dose selection and z2 is from dose selection to kth analysis at stage 2;
"Disjoint Subjects": z1 is at kth analysis for stage 1 subjects; z2 is at the kth analysis for stage 2 subjects. z1 will be adjusted by multiplicity and closed testing procedure at each analysis.
"Mixture": Only consider disjoint subjects at first analysis in stage 2. Starting from the 2nd analysis, consider independent incremental methods. Only z1 at 1st analysis will be adjusted by multiplicity and closed testing procedure.}
}
\value{
An object with values:
\describe{
\item{bd.z}{z value rejection boundary at each analysis}
\item{cum.pow}{Cumulative power}
\item{s}{Selected dose}
\item{selection}{Probability of selection among doses}
}
}
\description{
This functions calculates the cumulative power and overall power for a group sequential design by simulations.
}
\examples{
#Example (1): Stage 1: 4 arms; 3 dose levels; each arm 50 patients.
#Stage 2: additional 200 patients per arm will be enrolled at stage 2
#medians for the 4 arms: 9, 11, 13 and control = 8 months
#Enrollment: 12 months uniform in stage 1; 12 months uniform in stage 2
#Holding period: 4 months between stage 1 and 2
#Dose selection will be based on data cut at 16 months
#Stage 2 has 2 planned analyses at 300 and 380 events respectively.

#Dose selection decision is NOT based on ORR.
simu.power.p23(nSim=10, n1 = rep(50, 4), n2 = rep(200, 2), m = c(9, 9, 9, 9), 
orr = NULL, rho = NULL, dose_selection_endpoint = "not ORR",
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A1 = 12,
Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A2 = 12,
enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, method = "Independent Incremental")

#Example (2): #Dose selection decision based on ORR
simu.power.p23(nSim=10, n1 = rep(50, 4), n2 = rep(200, 4), m = c(9, 9, 9, 9), 
orr = c(0.25, 0.3, 0.4, 0.2), rho = 0.7, dose_selection_endpoint = "ORR",
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A1 = 12,
Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A2 = 12,
enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, method = "Independent Incremental")

simu.power.p23(nSim=10, n1 = rep(50, 4), n2 = rep(200, 4), m = c(9, 9, 9, 9), 
orr = c(0.25, 0.3, 0.3, 0.2), rho = 0.7, dose_selection_endpoint = "ORR",
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A1 = 12,
Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A2 = 12,
enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, method = "Disjoint Subjects")

simu.power.p23(nSim=10, n1 = rep(50, 4), n2 = rep(200, 4), m = c(9, 9, 9, 9), 
orr = c(0.25, 0.3, 0.3, 0.2), rho = 0.7, dose_selection_endpoint = "ORR",
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A1 = 12,
Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A2 = 12,
enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, method = "Mixture")

simu.power.p23(nSim=10, n1 = rep(50, 4), n2 = rep(200, 4), m = c(9, 9, 9, 9), 
orr = c(0.25, 0.3, 0.3, 0.2), rho = 0.7, dose_selection_endpoint = "ORR",
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, 
A1 = 12,Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, 
A2 = 12,enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, multiplicity.method = "dunnett", method = "Disjoint Subjects")

simu.power.p23.new(nSim=100, n1 = rep(50, 4), n2 = rep(200, 4), m = c(9, 9, 15, 9), 
orr = c(0.25, 0.25, 0.3, 0.2), rho = 0.7, dose_selection_endpoint = "ORR",
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, 
A1 = 12,Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, 
A2 = 12,enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, multiplicity.method = "dunnett", method = "Mixture")

simu.power.p23.new(nSim=100, n1 = rep(50, 4), n2 = rep(200, 4), m = c(9, 9, 14, 9), 
orr = c(0.15, 0.15, 0.3, 0.15), rho = 0.7, dose_selection_endpoint = "ORR",
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, 
A1 = 12,Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, 
A2 = 12,enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, multiplicity.method = "dunnett", method = "Disjoint Subjects")

}
